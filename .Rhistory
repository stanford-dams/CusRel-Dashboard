library(shiny); runApp('CusRel-Shiny.R')
knitr::opts_chunk$set(echo = TRUE)
install.packages("leaflet.extras")
runApp('CusRel-Shiny.R')
install.packages("ggmap")
runApp('CusRel-Shiny.R')
install.packages("tmaptools")
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reasons
)) # Add a Label for Popup
# Read in data
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
View(cus_rel_data)
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reasons
)) # Add a Label for Popup
# Read in data
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reasons
)) # Add a Label for Popup
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reason1, "&nbsp", Reason2
)) # Add a Label for Popup
# Palette
contact_sources <- unique(cus_rel_data$ContactSource) # get unique contact sources
contact_source_palette <- colorFactor(palette="Set3", domain=contact_sources)
color_list <- contact_source_palette(contact_sources)
the_map <- cus_rel_data %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(lat = ~Latitude, lng = ~Longitude,
fill = TRUE, fillColor = ~contact_source_palette(ContactSource),
fillOpacity = 0.6, stroke = FALSE,
color = ~contact_source_palette(ContactSource),
popup = ~Label) %>%
addLegend("bottomright", colors = color_list, labels = contact_sources, title = "Contact Source")
the_map
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
# Read in data
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
knitr::opts_chunk$set(echo = TRUE)
unique(cus_rel_data$IncidentCity)
unique(cus_rel_data$IncidentCity)[1]
unique(cus_rel_data$IncidentCity)[2]
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
unique(cus_rel_data$Reasons1)
unique(cus_rel_data$Reason1)
unique(cus_rel_data$Division)
unique(cus_rel_data$ForAction)
unique(cus_rel_data$RespondVia)
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
unique(cus_rel_data$ForAction)
runApp('CusRel-Shiny.R')
unique(cus_rel_data["Reason1"])
unique(cus_rel_data["Reason1", "Reason2"])
unique(cus_rel_data[c("Reason1", "Reason2")])
unique(cus_rel_data["Reason1", "Reason2"])
unique(cus_rel_data[c("Reason1", "Reason2")])
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
cus_rel_data %>% select("Reason1", "Reason2")
cus_rel_data %>% select("Reason1", "Reason2") %>% unique
cus_rel_data %>% select("Reason1", "Reason2") %>% t
cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c
cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c %>% unique
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
cus_rel_data %>%
summary(ADAComplaint)
cus_rel_data %>%
unique(ADAComplaint)
cus_rel_data %>%
select(ADAComplaint) %>%
summary
cus_rel_data %>%
groupy_by(ADAComplaint) %>%
summarize(n=n())
cus_rel_data %>%
group_by(ADAComplaint) %>%
summarize(n=n())
cus_rel_data %>%
group_by(SeniorComplaint) %>%
summarize(n=n())
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
