mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reasons
)) # Add a Label for Popup
# Read in data
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reasons
)) # Add a Label for Popup
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cus_rel_data <- cus_rel_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT")) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reason1, "&nbsp", Reason2
)) # Add a Label for Popup
# Palette
contact_sources <- unique(cus_rel_data$ContactSource) # get unique contact sources
contact_source_palette <- colorFactor(palette="Set3", domain=contact_sources)
color_list <- contact_source_palette(contact_sources)
the_map <- cus_rel_data %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(lat = ~Latitude, lng = ~Longitude,
fill = TRUE, fillColor = ~contact_source_palette(ContactSource),
fillOpacity = 0.6, stroke = FALSE,
color = ~contact_source_palette(ContactSource),
popup = ~Label) %>%
addLegend("bottomright", colors = color_list, labels = contact_sources, title = "Contact Source")
the_map
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
# Read in data
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
knitr::opts_chunk$set(echo = TRUE)
unique(cus_rel_data$IncidentCity)
unique(cus_rel_data$IncidentCity)[1]
unique(cus_rel_data$IncidentCity)[2]
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
unique(cus_rel_data$Reasons1)
unique(cus_rel_data$Reason1)
unique(cus_rel_data$Division)
unique(cus_rel_data$ForAction)
unique(cus_rel_data$RespondVia)
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
unique(cus_rel_data$ForAction)
runApp('CusRel-Shiny.R')
unique(cus_rel_data["Reason1"])
unique(cus_rel_data["Reason1", "Reason2"])
unique(cus_rel_data[c("Reason1", "Reason2")])
unique(cus_rel_data["Reason1", "Reason2"])
unique(cus_rel_data[c("Reason1", "Reason2")])
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
cus_rel_data %>% select("Reason1", "Reason2")
cus_rel_data %>% select("Reason1", "Reason2") %>% unique
cus_rel_data %>% select("Reason1", "Reason2") %>% t
cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c
cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c %>% unique
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
cus_rel_data %>%
summary(ADAComplaint)
cus_rel_data %>%
unique(ADAComplaint)
cus_rel_data %>%
select(ADAComplaint) %>%
summary
cus_rel_data %>%
groupy_by(ADAComplaint) %>%
summarize(n=n())
cus_rel_data %>%
group_by(ADAComplaint) %>%
summarize(n=n())
cus_rel_data %>%
group_by(SeniorComplaint) %>%
summarize(n=n())
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
load("~/GitHub/CusRel-Dashboard/Clean-CusRel-data.csv")
load("~/GitHub/CusRel-Dashboard/Clean-CusRel-data.csv")
knitr::opts_chunk$set(echo = TRUE)
cus_rel_data <- read_csv("Clean-CusRel-data.csv")
unique(cus_rel_data$Route[-c("NULL", "N/A")])
unique(cus_rel_data$Route)[-c("NULL", "N/A")]
unique(cus_rel_data[cus_rel_data$Route != c("NULL", "NA")]
unique(cus_rel_data[cus_rel_data$Route != c("NULL", "NA")])
unique(cus_rel_data[cus_rel_data$Route != c("NULL")])
unique(cus_rel_data[cus_rel_data$Route != "NULL"])
cus_rel_data[cus_rel_data$Route != "NULL"]
cus_rel_data[-c("NULL")]
cus_rel_data$Route[-c("NULL")]
cus_rel_data$Route
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% toupper() %>%  unique()
cus_rel_data %>% select(toupper(Route)) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% toupper() %>%  filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique() %>% toupper()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% toupper()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique() %>% toupper()
cus_rel_data$Route %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique() %>% toupper()
cus_rel_data %>% select(Route) %>% toupper() %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique() %>% toupper()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% toupper()
cus_rel_data %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% mutate(Route = toupper(Route)) %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data$Route
cus_rel_data$Route[-c("NULL")]
cus_rel_data[Route != "NULL"]
cus_rel_data[cus_rel_data$Route != "NULL"]
cus_rel_data$Route != "NULL"
runApp('CusRel-Shiny.R')
cus_rel_data %>% mutate(Route = toupper(Route)) %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != "NULL") %>% unique()
toupper(cus_rel_data$Priority)
cus_rel_data %>% filter(toupper(Priority))
cus_rel_data %>% mutate(Route = toupper(Route))
cus_rel_data %>% filter(Route %>% toupper())
runApp('CusRel-Shiny.R')
rlang::last_error()
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
sort(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique())
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort() %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% sort() %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(sort(IncidentCity != c("NULL"))) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(sort(IncidentCity) != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort() %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
sort(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique())
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
sort(factor(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()))
factor(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique())
sort(factor(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()))
sort(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique())
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% filter(sort(.))
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% order()
cus_rel_data %>% select(IncidentCity) %>% filter(order(IncidentCity != c("NULL"))) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% order() %>%  unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% sort(IncidentCity)
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort(IncidentCity) %>% unique()
cus_rel_data %>% sort(select(IncidentCity)) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% sort(filter(IncidentCity != c("NULL"))) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% str_sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% str_order()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% str_sort() %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% summary()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% typeof()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% list.sort()
library(rlist)
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique %>% sort
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique %>% order
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique(order(.))
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort() %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique() %>% sort()
sort(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))) %>% unique()
sort(cus_rel_data %>% select(IncidentCity)) %>% filter(IncidentCity != c("NULL")) %>% unique()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique()
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))
sort(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))
unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))
unique(cus_rel_data$ForAction)
list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
unique(cus_rel_data$ForAction)
unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))
unique(cus_rel_data$ForAction)
as.list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
unique(cus_rel_data$ForAction)
sort(as.list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))))
as.list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
as.list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))[1]
runApp('CusRel-Shiny.R')
unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% as.list())
list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
as.list(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
as.list(as.data.frame((unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")))))
as.list(as.data.frame(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
split(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))), seq(sort(cus_rel_data$IncidentCity)))
split(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))))
split(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))), seq(nrow()))
split(unique(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))), f=nrow())
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL"))
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% order()
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% sort(order())
cus_rel_data[IncidentCity]%>% filter(IncidentCity != c("NULL"))
cus_rel_data[IncidentCity] %>% filter(IncidentCity != c("NULL"))
cus_rel_data["IncidentCity"] %>% filter(IncidentCity != c("NULL"))
cus_rel_data %>% filter(IncidentCity != c("NULL")) %>% as.list()
cus_rel_data %>% filter(IncidentCity != c("NULL")) %>% as.list(IncidentCity)
runApp('CusRel-Shiny.R')
cus_rel_data[,"IncidentCity"] %>% filter(IncidentCity != c("NULL")) %>%
cus_rel_data[,"IncidentCity"]
as.list(cus_rel_data[,"IncidentCity"])
cus_rel_data[,"IncidentCity"]
cus_rel_data[,"IncidentCity"]
cus_rel_data[,"IncidentCity"]
unlist(cus_rel_data[,"IncidentCity"], use.names=FALSE)
cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != "NULL") %>% unique()
unlist(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != "NULL") %>% unique(), use.names=FALSE)
sort(unlist(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != "NULL") %>% unique(), use.names=FALSE))
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
# Define UI
ui <- fluidPage(
# Application title
titlePanel("AC Transit Customer Complaints"),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "date",
label = "Complaint Date",
min = min(cus_rel_data$ReceivedDate),
max = max(cus_rel_data$ReceivedDate),
value = c(min(cus_rel_data$ReceivedDate),max(cus_rel_data$ReceivedDate)),
dragRange = TRUE
),
checkboxGroupButtons(inputId="priorities", label="Priority",
selected=c("Normal"),
justified=TRUE,
choiceNames=c("Normal", "High"),choiceValues=c("Normal", "High")),
checkboxGroupInput(inputId="respondVia", label="Respond Via",
selected=c("App", "Email", "Letter", "Phone", "None"),
choiceNames=c("App", "Email", "Letter", "Phone", "None"),
choiceValues=c("App", "Email", "Letter", "Phone", "None")),
checkboxGroupInput(inputId="contact", label="Contact Source",
selected=c("WEB", "Phone", "SocialMedia", "Email", "Operations", "BoardofDirectors","Letter","App","WalkIn","Five11"),
choiceNames=c("WEB", "Phone", "Social Media", "Email", "Operations", "Board of Directors","Letter","App","Walk-In","511"),
choiceValues=c("WEB", "Phone", "SocialMedia", "Email", "Operations", "BoardofDirectors","Letter","App","WalkIn","Five11")),
pickerInput(inputId="cities", label="Incident City",
choices= sort(unlist(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique(), use.names=FALSE)),
selected = unlist(cus_rel_data %>% select(IncidentCity) %>% filter(IncidentCity != c("NULL")) %>% unique(), use.names=FALSE),
options=list('actions-box'=TRUE, 'live-search'=TRUE, 'title'='Select Cities', 'live-search-placeholder'='Search for Cities', size=5),
multiple=TRUE),
pickerInput(inputId="routes", label="Route",
choices= sort(unlist(cus_rel_data %>% mutate(Route = toupper(Route)) %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique(), use.names=FALSE)),
selected = unlist(cus_rel_data %>% mutate(Route = toupper(Route)) %>% select(Route) %>% filter(Route != c("NULL", "N/A")) %>% unique(), use.names=FALSE),
options=list('actions-box'=TRUE, 'live-search'=TRUE, 'title'='Select Routes', 'live-search-placeholder'='Search for Routes', size=5),
multiple=TRUE),
pickerInput(inputId="reasons", label="Complaint Reason",
choices=sort(unique(cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c %>% unique)),
selected = sort(unique(cus_rel_data %>% select("Reason1", "Reason2") %>% t %>% c %>% unique)),
options=list('actions-box'=TRUE, 'live-search'=TRUE, 'title'='Select Reasons', 'live-search-placeholder'='Search for Reasons', size=5),
multiple=TRUE),
pickerInput(inputId="department", label="Department",
choices=sort(unique(cus_rel_data$ForAction)),
selected = sort(unique(cus_rel_data$ForAction)),
options=list('actions-box'=TRUE, 'live-search'=TRUE, 'title'='Select Departments', 'live-search-placeholder'='Search for Departments', size=5),
multiple=TRUE)
),
# Show a plot of the generated distribution
mainPanel(
leafletOutput("the_map", height="700px"),
plotOutput("distPlot")
)
)
)
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
WORKING_DIR <- "/Users/harrisonli/Documents/iCloud_Documents/Stanford/DAMS/AC_Transit/CusRel-Dashboard"
raw_data <- read_csv("CusRel-Data.csv")
raw_stops <- read_csv("AC_transit_all_stops.csv")
# Change StopID in stops data to character, remove irrelevant columns
stops <- raw_stops %>%
dplyr::select(StopId, Latitude, Longitude) %>%
mutate(StopId = as.character(StopId))
# Add lat/lon columns
cleaned_data <- raw_data %>%
dplyr::filter(across(Location, ~grepl(pattern=".*\\(\\d\\d\\d\\d\\d\\)$",.))) %>%
mutate(StopId=substr(Location, nchar(Location)-5, nchar(Location)-1)) %>%
left_join(stops, by="StopId") %>% # add lat lon to table based on stops data
tidyr::separate(Reasons, into = c("Reason1", "Reason2"), sep = ";", fill = "right", extra = "drop") %>%
filter(!is.na(Longitude) & !is.na(Latitude))
# Add Resolve Time, Incident + Receive Date; Create Label for Popup
cleaned_data <- cleaned_data %>%
mutate(ResolveTime = round(as.numeric(difftime(as.POSIXct(ResolvedDateTime), as.POSIXct(ReceivedDateTime), units = "days"))),
ReceivedDate = as.Date(ReceivedDateTime, "%m/%d/%y", tz="PST8PDT"),
IncidentDate = as.Date(IncidentDateTime, "%m/%d/%y", tz="PST8PDT"),
Route = toupper(Route)) %>%
mutate(Label = str_c("<b>Received Date:</b> ", ReceivedDate, "<br/>",
"<b>Incident Date:</b> ", IncidentDate, "<br/>",
"<b>Location:</b> ", Location, "<br/>",
"<b>Destination:</b> ", Destination , "<br/>",
"<b>Route:</b> ", Route, " &nbsp;&nbsp ", "<b>Vehicle #:</b> ", VehNo, "<br/>",
"<b>Resolve Time:</b> ", ResolveTime, " day(s)<br/>",
"<b>Reason(s):</b> ", Reason1, if_else(is.na(Reason2), "", str_c("; ", Reason2))
)) # Add a Label for Popup
# Write out
write_csv(cleaned_data, paste(WORKING_DIR, "/Clean-CusRel-data.csv", sep=""))
knitr::opts_chunk$set(echo = TRUE)
WORKING_DIR <- "."
library(shiny); runApp('CusRel-Shiny.R')
library(shiny); runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
knitr::opts_chunk$set(echo = TRUE)
install.packages(shinydashboard)
install.packages("shinydashboard")
runApp('CusRel-Shiny.R')
runApp('CusRel-Shiny.R')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('CusRel-Shiny.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
?validColors
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
View(cus_rel_data)
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
runApp('~/Stanford/DAMS/ACBusDashboard/Shiny Test.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
?column
library(shiny); runApp('CusRel-Shiny2.0.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
library(shiny); runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
runApp('CusRel-Shiny2.0.R')
